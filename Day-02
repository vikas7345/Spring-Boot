Spring - Bean Scopes Example


In Spring, bean scopes define the lifecycle and visibility of beans within the container. Here are some common bean scopes in Spring:

Singleton Scope (default): Spring creates a single instance of the bean and reuses it whenever the bean is requested. It is the default scope for Spring beans.

Prototype Scope: Spring creates a new instance of the bean each time it is requested. This is useful when you want to create a new object every time the bean is used.

Request Scope: A new bean instance is created for each HTTP request when used in a web application. This scope is only valid in the context of a web-aware Spring ApplicationContext.

Session Scope: Similar to request scope, but a new bean instance is created for each HTTP session.

Global Session Scope: Used in a web application with a global session. It creates a single instance of the bean for the entire web application's lifecycle.

Here's an example that demonstrates these scopes using the Singleton and Prototype scopes. For this example, I'll focus on the Singleton and Prototype scopes.

Step 1: Set up your project structure

Create a new directory for your project and navigate to it in your terminal. Then, create the following directory structure:

bean-scopes-example
└── src
    └── main
        └── java
            └── com
                └── example
                    ├── BeanScopesApp.java
                    ├── AppConfig.java
                    ├── SingletonBean.java
                    └── PrototypeBean.java
